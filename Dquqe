#include <stdio.h>
 #define N 5 
int deque[N]; 
int f=-1,r=-1;
 void enqueuefront(int x)
 { if((f==r+1)||(f==0&&r==N-1))
 { printf("queue if full");
 } 
else if(f==-1&&r==-1) 
{ f=r=0;
 deque[f]=x;
 }
 else if(f==0)
 {
 f=N-1;
 deque[f]=x;
 } 
else 
{ 
f--; 
deque[f]=x;
 } 
} 
void enqueuerear(int x)
 { 
if((f==r+1)||(f==0&&r==N-1))
 { 
printf("queue if full");
 } 
else if(f==-1&&r==-1)
 { 
f=r=0; 
deque[r]=x;
 } 
else if(r==N-1)
 { 
r=0;
 deque[r]=x;
 } 
else 
{ 
r++; 
deque[r]=x;
 } 
} 
void dequeuefront()
 { 
if(f==-1&&r==-1) 
{ 
printf("empty"); 
}
 else if(f==r)
 { 
f=r=-1; 
} 
else if(f==N-1) 
{ 
printf("%d",deque[f]);
 f=0; 
} 
else
 { 
printf("%d",deque[f]); 
f++;
 } 
} 
void dequeuerear()
 { 
if(f==-1&&r==-1) 
{
 printf("empty");
 } 
else if(f==r)
 {
 f=r=-1;
 }
 else if(r==0) 
{ 
printf("%d",deque[r]);
 r=N-1; 
} 
else 
{
 printf("%d",deque[r]); 
r--; 
} 
} 
 void display()
 { 
int i=f; 
while(i!=r)
 {
 printf("%d",deque[i]); i=(i+1)%N;
 } 
printf("%d",deque[i]); 
} 
void main() 
{
int c,k, n;
        do
        {
                printf("enter ur choice:\n1.enqueue rear\n2.enqueue front\n3.dequeue front\n4.dequeue rear");
                scanf("%d",&c);
                switch(c)
                {
                        case 1:
printf("enter element to enqueue ar rear:");
scanf("%d",&n);
                                enqueuerear(n);
                                break;
                        case 2:
printf("enter element to enqueue ar front:");
scanf("%d",&n);
                                enqueuefront(n);
                                break;
                        case 3:
                                dequeuefront();
                                break;
                        case 4:
                                dequeuerear();
                                break;
                }
                printf("enter 1 to continue 0 to exit");
                scanf("%d",&k);
        }while(k==1);
}
